<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://n-reeves.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://n-reeves.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-31T01:07:01+00:00</updated><id>https://n-reeves.github.io/feed.xml</id><title type="html">blank</title><subtitle>Professional homepage for Nick Reeves. </subtitle><entry><title type="html">Experimental Design Strategies for Engaging Quantitative Customers</title><link href="https://n-reeves.github.io/blog/2025/experiment-design-for-quantitative-customers/" rel="alternate" type="text/html" title="Experimental Design Strategies for Engaging Quantitative Customers"/><published>2025-01-28T11:59:00+00:00</published><updated>2025-01-28T11:59:00+00:00</updated><id>https://n-reeves.github.io/blog/2025/experiment-design-for-quantitative-customers</id><content type="html" xml:base="https://n-reeves.github.io/blog/2025/experiment-design-for-quantitative-customers/"><![CDATA[<p>The write up on this page is in progress. Please check back in a week.</p> <p>The first version of my article on <a href="https://n-reeves.github.io/blog/2025/experiment-design-customer-service/">experiment design for service tecniques</a> is live if you would like a reference on my approach to experiment design.</p>]]></content><author><name></name></author><category term="Statistics"/><summary type="html"><![CDATA[Good experiments can help your sales and marketing teams find common ground with your customers. This article covers the value of observational studies in driving growth in a technical customer base]]></summary></entry><entry><title type="html">Neural Speech Enhancer - Architecture, Training, and Post-Processing</title><link href="https://n-reeves.github.io/blog/2025/speech-enhancement-network/" rel="alternate" type="text/html" title="Neural Speech Enhancer - Architecture, Training, and Post-Processing"/><published>2025-01-24T01:59:00+00:00</published><updated>2025-01-24T01:59:00+00:00</updated><id>https://n-reeves.github.io/blog/2025/speech-enhancement-network</id><content type="html" xml:base="https://n-reeves.github.io/blog/2025/speech-enhancement-network/"><![CDATA[<hr/> <h2 id="introduction">Introduction</h2> <p>Speech enhancement aims to improve the audibility and clarity of speech in noisy or reverberant environments. This project explores a neural network-based approach for reducing background noise and echo while enhancing speech quality. The system leverages a Complex U-Net architecture trained to process noisy and reverberant audio, focusing on single-channel, two-speaker scenarios.</p> <p>The <a href="https://n-reeves.github.io/projects/Neural-Speech-Enhancement/">project page</a> on this topic contains an interactive demo that allows you to test the model yourself.</p> <p><em>Disclaimer on generative AI use:</em> This document was created with the help of ChatGPT, which summarized key content from a more comprehensive paper I wrote. I have verified the accuracy of the information listed here and edited the content where appropriate.</p> <hr/> <h2 id="background">Background</h2> <ul> <li><strong>Audio Signal</strong>: A time-domain representation of sound that can be transformed into frequency components using techniques like the Short-Time Fourier Transform (STFT).</li> <li><strong>STFT</strong>: A method that splits an audio signal into overlapping frames, applying the Fourier transform to each to yield time-frequency representations.</li> <li><strong>STFT Coefficients</strong>: Complex numbers representing the amplitude (magnitude) and phase of audio signals at specific time-frequency bins.</li> <li><strong>Convolutional Neural Networks (CNNs)</strong>: Neural networks designed to extract features from grid-like data, such as images or spectrograms.</li> <li><strong>Spectrograms</strong>: Visual representations of the frequency content of a signal over time, derived from STFT magnitudes.</li> <li><strong>U-Net</strong>: An encoder-decoder network architecture with skip connections, commonly used for image segmentation and extended here for speech enhancement.</li> <li><strong>Complex Convolutions</strong>: Extensions of convolution operations to the complex domain, enabling models to process both magnitude and phase components.</li> </ul> <hr/> <h2 id="demo">Demo</h2> <p>Here is a preview of the system’s capability. There are clear aesthetic issues with the output, however it appears that background noise is being supressed and the speech content is largely preserved. More details on how this was achieved follow.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <label for="input-audio-example">Input Audio Example</label> <figure> <audio src="/assets/audio/quiet-speech-loud-drone_in.wav" controls=""/> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <label for="output-audio-example">Output Audio Example</label> <figure> <audio src="/assets/audio/quiet-speech-loud-drone_out.wav" controls=""/> </figure> </div> </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/speech-enhance/speech-enhance-example-480.webp 480w,/assets/img/speech-enhance/speech-enhance-example-800.webp 800w,/assets/img/speech-enhance/speech-enhance-example-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/speech-enhance/speech-enhance-example.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="experiment-design">Experiment Design</h2> <h3 id="objective">Objective</h3> <p>To enhance speech clarity by reducing background noise and reverberation in two-speaker audio mixtures.</p> <h3 id="dataset">Dataset</h3> <ol> <li><strong>LibriMix Dataset</strong>: <ul> <li>8,000 samples of fully overlapping, 8 kHz two-speaker mixtures.</li> <li>Divided into 75% training, 12.5% validation, and 12.5% testing subsets, ensuring no speaker overlap between train and test sets.</li> <li>Additive noise was applied for augmentation.</li> </ul> </li> <li><strong>MIT Impulse Response Dataset</strong>: <ul> <li>271 impulse responses simulating real-world reverberant environments.</li> <li>Partitioned into 70% training, 15% validation, and 15% testing splits.</li> </ul> </li> </ol> <h3 id="data-augmentation">Data Augmentation</h3> <ul> <li>Random cropping was applied to training data to introduce noise variations.</li> <li>Reverberation was added to mixtures using impulse responses from the MIT dataset.</li> </ul> <hr/> <h3 id="loss-function">Loss Function</h3> <p>The loss function minimizes the difference between the predicted and target STFT coefficients:</p> \[\mathcal{L} = \sum_{t,f} \left( | \hat{R}_{t,f} - R_{t,f} |^2 + | \hat{I}_{t,f} - I_{t,f} |^2 \right)\] <p>Where \(\hat{R}_{t,f}\) and \(\hat{I}_{t,f}\) are the predicted real and imaginary components, and \(R_{t,f}\) and \(I_{t,f}\) are the target components at time \(t\) and frequency \(f\).</p> <hr/> <h3 id="evaluation-metrics">Evaluation Metrics</h3> <ul> <li><strong>Signal-to-Distortion Ratio (SDR)</strong>: Measures the quality of the enhanced signal relative to the ground truth.</li> </ul> \[\text{SDR} = 10 \log_{10} \frac{\|s_{\text{target}}\|^2}{\|s_{\text{error}}\|^2}\] <p>Where \(s_{\text{target}}\) is the ground truth signal, and \(s_{\text{error}}\) is the difference between the ground truth and the predicted signal.</p> <ul> <li><strong>Perceptual Evaluation of Speech Quality (PESQ)</strong>: Quantifies speech quality as perceived by humans.</li> </ul> \[\text{PESQ} = f_{\text{pesq}}(s_{\text{enhanced}}, s_{\text{reference}})\] <p>Where \(f_{\text{pesq}}\) is the PESQ evaluation function, \(s_{\text{enhanced}}\) is the enhanced signal, and \(s_{\text{reference}}\) is the reference signal.</p> <p>The final network was chosen based on the average difference between the PESQ scores of the network’s output compared to the clean, unaugmented input, and the PESQ scores of the noisy reverberant input audio compared to the clean input.</p> <h2 id="architecture">Architecture</h2> <p>In audio processing, neural architectures are often designed to work with spectrograms, as this simplifies the handling of complex numbers. It also enables the use of existing image processing techniques, such as convolutional neural networks (CNNs), without issues. However, this approach requires discarding phase information, which can lead to challenges depending on the task.</p> <ul> <li>The network cannot leverage phase information during training.</li> <li>If the system is designed to work with spectrograms (e.g., through masking), the output will be real-valued.</li> </ul> <p>In the context of speech enhancement, I aimed to create a mask that could be applied directly to the output. By applying a mask rather than synthesizing an enhanced signal, the stability of the network is improved. Additionally, when a network is trained to generate a magnitude spectrogram, phase information must be approximated using techniques like Griffin-Lim, or a different system must be employed to convert the real-valued coefficients back to the signal domain.</p> <h3 id="complex-convolutional-layers">Complex Convolutional Layers</h3> <p>A complex convolutional filter \(W = A + iB\) applied to a complex input \(h = x + yi\) produces:</p> \[Wh = (A * x - B * y) + i(B * x + A * y)\] <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/speech-enhance/complexconv-480.webp 480w,/assets/img/speech-enhance/complexconv-800.webp 800w,/assets/img/speech-enhance/complexconv-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/speech-enhance/complexconv.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="Real vs. Complex Convolution" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <label for="output-audio-example">Diagram from Choi, H.-S. et al. (2019) (author redacted paper) </label> </div> </div> <p>This idea was proposed by Trabelsi, C. et al. (2018), who also extend the logic to activation functions and different normalization techniques.</p> <h3 id="complex-u-net">Complex U-Net</h3> <p>The architecture consists of an encoder-decoder network with complex convolutions:</p> <ol> <li><strong>Encoder</strong>: Sequential layers of complex convolutions and downsampling that capture compact representations of the input spectrogram.</li> <li><strong>Decoder</strong>: Transpose convolutions that reconstruct the spectrogram from encoded features.</li> <li><strong>Skip Connections</strong>: Feature maps from encoder layers are concatenated with corresponding decoder layers to preserve spatial information.</li> </ol> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/speech-enhance/complexskipnet-480.webp 480w,/assets/img/speech-enhance/complexskipnet-800.webp 800w,/assets/img/speech-enhance/complexskipnet-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/speech-enhance/complexskipnet.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="Real Valued Skip U-Net from Kothapally, V. et al. 2020" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <label for="output-audio-example">Diagram from Kothapally, V. et al. (2020)</label> </div> </div> <p>My design extends the real-valued U-Net for speech dereverberation design proposed by Kothapally, V. et al. (2020) to the complex domain. It should be noted that my original inspiration for this combination of ideas was from Choi, H.-S. et al. (2019), although the author redacted the paper due to flaws in their methodology.</p> <h3 id="real-valued-skip-u-net-vs-complex-u-net">Real-Valued Skip U-Net vs. Complex U-Net</h3> <ul> <li><strong>Real-Valued U-Net</strong>: Operates only on magnitude spectrograms, combining the output with the noisy phase.</li> <li><strong>Complex U-Net</strong>: Processes the full complex STFT coefficients, preserving phase information.</li> </ul> <p><img src="assets/real_valued_skip_unet.png" alt="Real-Valued Skip U-Net Architecture"/> <img src="assets/complex_conv_layer.png" alt="Complex Convolutional Layer"/></p> <hr/> <h2 id="post-processing-with-signal-processing">Post-Processing with Signal Processing</h2> <p>The U-Net applies a tanh activation function to the complex masking coefficients, which stabilizes the output but imposes a strict bound on the signal’s intensity. This often results in a reduced perceived loudness. To address this, I designed a custom loudness normalization algorithm that adjusts the output’s amplitude envelope, ensuring it closely matches the input’s amplitude envelope without any coefficients exceeding the input’s intensity.</p> <p>The key steps are:</p> <ol> <li><strong>STFT Magnitude Adjustment</strong>: <ul> <li>Compute scaling factors for each time-frequency coefficent based on the ratio of the magnitude spectrogram of the input signal to the magnitude spectrogram of the output signal.</li> </ul> </li> <li><strong>Normalization Formula</strong>: <ul> <li>If the network reduced the magnitude of a coeffient in the output relative to the min and max of the input and output spectrograms, we do not boost the magnitude of those coefficents</li> </ul> </li> <li><strong>Reconstruction</strong>: <ul> <li>Apply the inverse STFT (ISTFT) to the normalized audio to generate the final time-domain signal.</li> </ul> </li> </ol> <p>More formally, let \(X\) be the STFT of the input signal, \(Y\) be the STFT of the output signal. Let \(|X|^{\text{norm}}\) and \(|Y|^{\text{norm}}\) be the min-max normalized spectrograms of \(X\) and \(Y\), respectively.</p> <p>The scaling factor \(sf_{ij}\) for each complex coefficient \(Y_{ij}\) is defined as:</p> \[\text{sf}_{ij} = \begin{cases} 1 &amp; \text{if } \frac{|X_{ij}|^{\text{norm}}}{|Y_{ij}|^{\text{norm}}} &lt; 1 \\ \frac{|X_{ij}|}{|Y_{ij}|} &amp; \text{otherwise} \end{cases}\] <p>This scaling factor adjusts the magnitude of \(Y_{ij}\) to match the desired relationship between the input and output signals. In the first case of the of the piecewise function, we assume the network tried to reduce the contribution of this coefficient to the strength of signal, so we do not apply the scaling factor. If this ratio is greater than or equal to one, the scaling factor is applied to the complex coefficient.</p> <p>Finally, to limit the case where the scaling factor leads to unpleasantly large increases in energy, the scaling factor is limited s.t. the magnitude of each coefficient can’t surpass the magnitude of the input coefficient.</p> <p>This method assumes that the input coefficients with useful content always have greater magnitudes than the corresponding time-frequency bins in the output signal. In cases where the input signal is extremely faint, the network’s output can become nearly inaudible without the post-processing step. Handling this specific edge case has been left for future work.</p> <h2 id="results-and-recap">Results and Recap</h2> <p>Overall, I found that the network improved the average PESQ compared to the noisy examples it was trained on. While the network’s performance on real-world data indicates there is room for improvement, the results were promising given the limited data and compute available. It was exciting to see that the network could generalize to some extent.</p> <p>In the future, I would like to extend the training time, increase the data set, and introduce learnable parameters to the signal processing operations. Since differentiable DSP operations can be integrated directly into neural pipelines, this could further enhance the quality of the output.</p> <hr/> <h3 id="assets">Assets</h3> <ul> <li><a href="assets/input_output_spectrogram.png">Input and Output Spectrograms</a></li> <li><a href="assets/audio_example.mp3">Audio Example (Input and Output)</a></li> </ul>]]></content><author><name></name></author><category term="Machine-Learning"/><category term="Audio-Processing"/><category term="speech"/><category term="accessibility"/><category term="signal-processing"/><summary type="html"><![CDATA[Noisy environments can make speech more difficult to understand. In this project I explore a novel method for removing background noise and echos for audio files with multiple speakers]]></summary></entry><entry><title type="html">Experimental Design for Call Center Support Strategies</title><link href="https://n-reeves.github.io/blog/2025/experiment-design-customer-service/" rel="alternate" type="text/html" title="Experimental Design for Call Center Support Strategies"/><published>2025-01-21T11:59:00+00:00</published><updated>2025-01-21T11:59:00+00:00</updated><id>https://n-reeves.github.io/blog/2025/experiment-design-customer-service</id><content type="html" xml:base="https://n-reeves.github.io/blog/2025/experiment-design-customer-service/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>In modern customer service, call centers play a critical role in shaping the customer experience and, by extension, customer loyalty. As businesses strive to improve these experiences, they often experiment with new customer service methods or tools to identify approaches that work best. Without a robust statistical framework, assessing these changes becomes prone to bias and misinterpretation, potentially leading to costly missteps or the adoption of innefective programs.</p> <p>Randomized Control Trials (RCTs) offer a powerful methodology for evaluating new strategies in call centers. By randomizing treatments and analyzing their outcomes, businesses can identify causality with confidence, even when dealing with complex systems like human behavior and operational variability. Additionally, as agent-based AI systems are increasingly adopted by service organizations, robust frameworks for assessing their performance are essential to guiding development. Effective statistical models can bridge the gap between the machine learning development lifecycle and proxies for the customer experience</p> <p><em>Disclaimer:</em> This article is in progress. Updates may flow in throughout the week</p> <h2 id="why-statistics">Why Statistics?</h2> <p>Businesses invest heavily in customer service because it directly impacts retention, reputation, and revenue. Despite this, decision-makers often rely on anecdotal evidence or incomplete data to assess the success of new initiatives. This can lead to ineffective strategies being implemented at scale or valuable ones being overlooked.</p> <p>Statistics provide a way to objectively measure the impact of changes, isolating the effects of a new customer service method from other confounding factors like seasonal trends, customer demographics, or operational differences. For example, while a manager might assume a drop in call resolution time indicates an improvement, statistical analysis can reveal whether this change is consistent across representative groups or if it disproportionately benefits a subset of customers.</p> <p>By applying a rigorous statistical framework, companies can evaluate whether a new approach genuinely improves customer experience or simply shifts the burden elsewhere.</p> <h2 id="experimental-design">Experimental Design</h2> <h3 id="randomized-control-trials-rcts-principles-and-advantages">Randomized Control Trials (RCTs): Principles and Advantages</h3> <p>RCTs are the gold standard for causal inference because they minimize bias through random assignment. In a call center, this could involve randomly assigning callers to different customer service methods, ensuring each group is comparable.</p> <p>This randomness helps account for external factors like time of day, caller mood, or even weather, which might otherwise skew results. For example, callers during peak hours may have different expectations than those during quieter times, making randomization critical for isolating the effect of the new method.</p> <h3 id="challenges-unique-to-call-centers">Challenges Unique to Call Centers</h3> <p>Call centers introduce unique challenges, such as variability among agents, geographic diversity of callers, and the difficulty of obtaining consistent feedback. Designing experiments that accommodate these factors—like stratifying samples by geography or time of day—ensures more reliable results.</p> <p>Additionally, it can be expensive and time-consuming to train your representatives on a new approach to service. These costs can increase the risk of altering a service strategy without solid evidence to support their value.</p> <h2 id="measuring-customer-experience">Measuring Customer Experience</h2> <p><strong>Response Variables: Defining Success</strong> The choice of response variable is critical. Common metrics include customer satisfaction scores, first-call resolution rates, and net promoter scores (NPS). However, these metrics come with caveats:</p> <ul> <li>Optional ratings: When responses are voluntary, they often exhibit a bimodal distribution—extremely high or low ratings—making it harder to detect subtle changes in customer sentiment.</li> <li>Ordinal data: Metrics like 1–5 ratings are ordinal, not interval, meaning the difference between a 4 and a 5 may not be equivalent to that between a 2 and a 3.</li> </ul> <p>To mitigate issues with response rate, businesses can:</p> <ul> <li>Integrate feedback collection directly into the call with the representative</li> <li>For digital products, work with product teams to integrate the feedback form directly into the product itself.</li> </ul> <p>An important to consider that feedback questions asked directly representatives may result in skewed answers. Many people will feel more uncomfortable giving negative feedback when a human is involved.</p> <p>To handle missing response variables and the bimodal nature of the data, some solutions are:</p> <ul> <li>Opt for measures of call resolution rates that don’t depend on optional customer feedback.</li> <li>Use binary variables to categorize experiences into positive/not-positive or negative/not-negative.</li> </ul> <p>It’s important to note that there are often underlying relationships that influence the presence and absence of responses. It is always possible that highly positive or negative experiences may lead to higher response rates. Additionally, while some may wish to take advantage of the ordinal nature of the data, it’s worth reflecting on what each category means and what benefit you hope to gain in inference by adopting these techniques. In practice, I have found it helpful to reduce the problem to measures that identify when customers have positive experiences and when they have negative experiences.</p> <h2 id="addressing-common-problems">Addressing Common Problems</h2> <h3 id="sampling-strategies">Sampling Strategies</h3> <p>Sampling can introduce bias if not carefully managed. When measuring call center performance, I have two primary considerations. First, are our key customer demographics represented fairly in the data we collect? Second, what is the relationship between the skill of individual reps and the customer experience?</p> <p>In an ideal world, we want to adopt service strategies that improve the experience for every possible group. In practice, you may want to prioritize certain groups. Getting equal representation of your customers across geography, age, gender, etc., is difficult without mature service analytics infrastructure. Stratified sampling is a great way to get the desired effect but relies on a link between the calls and user demographic data.</p> <p>Additionally, the time when users call is also an important consideration and worth stratifying depending on your product. A user that calls in at three in the morning is likely to have a pretty good reason to do so. There may be a relationship between this variable and the customers that need the highest quality of care. Without consideration, it’s possible that peak time calls are overrepresented in your experiment, reducing the power of inference.</p> <p>On the second point, good reps can have a large positive effect on the way your customers feel after calling in and resolution rates. Naturally, a large number of calls and reps can help control for an individual’s influence on the way you measure a new strategy. However, this would defeat the purpose of this framework. We want to avoid investing money into training a large number of representatives on a new strategy without evidence that supports it’s an improvement. This problem can be addressed through a combination of how we randomly assign treatment and the statistical techniques that we use.</p> <h3 id="assigning-treatment">Assigning Treatment</h3> <p>To randomly assign a new service technique, start by selecting a subset of service representatives at random. Using stratified sampling can ensure their hours and locations cover the temporal and geographic ranges you wish to control for. Over time, calls handled by these representatives will form the treatment group. To account for ramp-up or training, you may exclude data from the initial days or weeks.</p> <p>This approach minimizes the training required and reduces the risk of exposing customers to a suboptimal process. Alternatively, representatives could alternate between strategies for each call, limiting the analysis to this group. While this controls for individual differences, there are practical and theoretical drawbacks:</p> <ul> <li>The method doesn’t leverage the full dataset from your organization.</li> <li>It requires technical infrastructure that may not always be feasible.</li> <li>Alternating strategies could confuse representatives, potentially lowering service quality.</li> </ul> <p>As I’ll cover in the next section, an appropriate set of statistical models/tests can help account for the potential correlation between calls accepted by the same rep and the influence of an individual rep’s skill level on the response.</p> <h2 id="testing">Testing</h2> <h3 id="mixed-effects-hierarchical-models">Mixed Effects (Hierarchical) Models</h3> <p>Hierarchical data is prevalent in business settings, and recognizing it is crucial for improving the quality of inference. For example, you might work with user-level data to analyze webpage clicks but have multiple observations for each customer. In clinical settings, you may focus on patient outcomes while accounting for the hospital. Other examples include test scores grouped by students or shipping speed influenced by warehouses. Such cases can create challenges for standard regression analysis and hypothesis testing, as including all data risks introducing correlation between observations.</p> <p>Mixed effects models, also known as hierarchical or multilevel models, combine fixed and random effects to analyze data with a naturally grouped structure (e.g., customer data grouped by region or product). They help model relationships more accurately when there are varying influences across subgroups within a larger population.</p> <ul> <li>Fixed effects are coefficients you want to estimate and interpret directly, representing the average relationship across all data.</li> <li>Random effects capture subgroup-level variability and account for differences between groups, using partial pooling to balance the influence of smaller and larger groups.</li> </ul> <p>This article doesn’t serve as a full explanation of the theory behind these models. If you would like a great resource, <a href="https://bookdown.org/roback/bookdown-BeyondMLR/">Beyond Multiple Linear Regression</a> by Roback and Legler is a great textbook that provides practical advice on multi-level modeling in R. As a high-level reference, it’s important to know the following:</p> <ul> <li>Generalized linear models assume that observations are independent of one another.</li> <li>Hierarchical data risks violating this assumption.</li> <li>You may have many groups, or the size of your groups may vary significantly. In either case, this could result in issues when applying standard encoding methods for categorical variables.</li> <li>Mixed effects models address these issues by treating group-level effects as random variables. This approach allows the model to learn from all groups collectively, applying partial pooling to shrink group estimates toward the overall population mean.</li> </ul> <p>The result is a robust inferential tecnique that allows you to:</p> <ul> <li>Measure the relationship between your predictors (e.g., treatments) and a response variable while accounting for correlation within groups.</li> <li>Quantify how much variability in the response can be attributed to differences between groups, offering insight into the influence of group-level factors on the aggregate response. (How much of the total variance in customer feedback is explained by an individual rep’s skill?)</li> </ul> <h3 id="mixed-effects-models-within-the-framework">Mixed Effects Models within the Framework</h3> <p>Mixed effects models are well suited to this experimental framework, as they enable the analysis of hierarchical data while addressing the variability inherent in call center environments. These models combine fixed effects, which capture the treatment impact of a new service strategy, with random effects that account for differences among individual customer service representatives.</p> <p>Depending on the context, additional variables can be modeled as fixed or random effects. Fixed effects represent factors of primary interest that remain consistent across repeated studies, while random effects account for variations arising from sampling. For example, in our service study, the selection of representatives to implement the new technique and the geographic distribution of callers could be modeled as random effects. Conversely, the service strategy type, which is central to understanding its causal impact on the response, would be treated as a fixed effect.</p> <h2 id="case-study-applying-the-framework">Case Study: Applying the Framework</h2> <h3 id="set-up">Set Up</h3> <p>For ease of understanding, let’s walk through a theoretical experiment. Imagine you are interested in releasing a new AI agent that integrates with the process used by your service reps. You start by randomly sampling 1,000 reps across your different call centers. You then partition these reps into groups based on when they work and their geographic coverage. Using stratified sampling, you produce a set of 100 reps that are evenly distributed across the time frames and regions you are concerned with. These reps are trained in the new technique and begin to apply it in practice.</p> <p>To eliminate potential confounding effects from ramp-up time, you exclude the first three days of data after training. Your call centers ensure a high match rate with internal customer demographic data by using robust customer ID matching based on phone numbers and names recorded during calls.</p> <p>The experiment includes calls handled by 2,000 representatives, among them 100 trained reps using the new AI agents. The objective is to determine whether the new AI agents have a positive causal effect on a binary response: whether customers rated their experience with four or five stars on a 1–5 scale in an optional questionnaire embedded in your product. However, you suspect that late-hour reps may encounter more irate customers and that older customers are more likely to complete the questionnaire, both of which could bias the results.</p> <h3 id="variables-and-model-definition">Variables and Model Definition</h3> <p>Let \(Y_{ij}\) represent the response variable for the \(i\)th representative on their \(j\)th call. Let \(T_{i}\) be the binary variable indicating whether representative \(i\) was trained on and applied the AI-based strategy. Let \(B_{ij}\) be a binary variable indicating whether the customer on the $i$th rep’s $j$th call is over the age of 70, and let \(C_{ij}\) be a binary variable indicating whether the call occurred between 12 a.m. and 7 a.m. in the customer’s local timezone.</p> <p>In regression analysis for inference, it is common to start by building a model without the variable of interest. Once the model is complete, the treatment variable is added to assess its significance. For simplicity, we define the entire model, including the treatment variable, from the outset.</p> <p>Call level (level one):</p> <p>\begin{equation} Y_{ij} ​= a_{i} + b_{i}B_{ij} + c_{i}C_{ij} + \epsilon_{ij} \end{equation}</p> <p>Here, \(a_{i}\) represents the representative-specific intercept, \(b_{i}\) represents the representative-specific effect of working with older callers, and \(c_{i}\) represents the representative-specific effect of taking nighttime calls. \(\epsilon_{ij}\) is the randomly distributed error associated with the observation.</p> <p>Rep level (level two):</p> <p>\begin{equation} a_{i} = \alpha_{0} + \alpha_{1}T_{i} + u_{i} \end{equation} \begin{equation} b_{i} = \beta_{0} + \beta_{1}T_{i} + v_{i} \end{equation} \begin{equation} c_{i} = \gamma_{0} + \gamma_{1}T_{i} + w_{i} \end{equation}</p> <p>The representative-level variables are defined based on the interaction terms with the treatment variable that we include in our model. The key idea is that \(u_{i}, v_{i}, w_{i}\) are random effects intended to capture between-rep variability in the intercepts and slopes. The coefficients \(\alpha, \beta,\gamma\) are all fixed effects. If the new strategy has a positive relationship with the response, we would expect this to be reflected in the values and significance of \(\alpha_{1}, \beta_{1}, \gamma_{1}\).</p> <h2 id="communication-and-pragmitism-in-applied-statistics">Communication and Pragmitism in Applied Statistics</h2> <p>When working with business leaders, simply stating the p-value, confidence interval, and point estimate associated with the coefficient of your treatment is not enough. Extending these estimations to provide a range of expected ROI or other actionable metrics in the context of the response variable is critical. Additionally, incorporating the cost of implementing the program can make the decision easier and facilitate a more productive discussion.</p> <p>To adjust and simplify our case study, suppose we adopted a simpler model that dropped all interaction terms with the treatment, leaving only a fixed effect associated with it. Assume our response variable is binary, indicating whether the caller gave a 4+ star rating.</p> <p>Suppose the estimated coefficient for the treatment is \(1.25\) with a \(95%\) confidence interval of \([1.1, 1.4]\). Thus, the new strategy leads to an increase in the log odds by \(1.25\). But what does this mean? We can exponentiate the bounds of the confidence interval to instead produce the estimates in terms of the odds (the ratio of the probability of success to the probability of failure). The result is a confidence interval that spans \([~3, ~4]\), but again, how can this be used to help business decisions?</p> <p>One straightforward method is to tie the results of inference back to the KPI that motivated your choice in response. For example, an org might use the percentage of calls with a certain rating as a health check. Look at the current rate of positive ratings under the existing strategy to contextualize what a three to four times increase in the probability of receiving a positive rating would look like.</p> <p>Say the current rate is \(.4\) Under the assumption that \(p = .4\), the existing odds would be \(\frac{.4}{.6} = \frac{40}{60}\)</p> <p>Convert the bounds of your confidence intervals to odds based on your existing success rate:</p> <p>Lower Bound: \(40/60 * 3 = 120/60 = 2\)</p> <p>Upper Bound: \(40/60 * 4 = 160/60 = 2.67\)</p> <p>Now convert the odds back to probabilities to produce an estimated range for the new rate:</p> <p>Lower bound: \(\frac{2}{1 + 2} = .67\)</p> <p>Upper Bound: \(\frac{2}{1 + 2.67} = .73\)</p> <p>To contextualize the confidence interval, remind stakeholders that these values represent the range of plausible outcomes given the data. I like to provide extreme examples to help them understand the downside of working with point estimates alone.</p> <ul> <li>If customers assigned to trained reps were unusually cheerful by chance, the results might overestimate the true effect.</li> <li>Conversely, if treated reps happened to get more difficult customers, the results might underestimate the effect.</li> </ul> <p>The confidence interval is just a means to quantify this effect. If we were to repeat this experiment 100 times with random sets of customers and random reps each time, we would expect that in \(95%\) of these trials this range would include the true value added by the new strategy. If this explanation is too heady for your partners, you can start by explaining there is a \(95%\) chance that the value offered by the new strategy will fall between the range that you calculated.</p> <h2 id="future-directions-ai-llms-and-the-future-of-service">Future Directions: AI, LLMS, and the Future of Service</h2> <p>As AI tools like large language models (LLMs) become integral to customer service, the role of statistics becomes even more critical. A/B testing AI-driven methods—such as comparing chatbot versions or evaluating hybrid human-AI workflows—requires robust frameworks to measure their impact on customer experience.</p> <p>Automating these frameworks ensures consistency and scalability, allowing businesses to rapidly iterate on new tools while maintaining a clear link between service strategies and customer satisfaction.</p>]]></content><author><name></name></author><category term="Statistics"/><summary type="html"><![CDATA[Call center support is a fundamental component of the customer experience in any organization. This article details an approach I have used to quantify the impact of new support initiatives on the customer experience before they launch]]></summary></entry></feed>